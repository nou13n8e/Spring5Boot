<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="nou.hello.boot.spring5boot.mybatis.PdsMapper">

    <!-- view result -->
    <resultMap id="pa" type="PdsAttach">
        <result column="fname" property="fname" />
        <result column="ftype" property="ftype" />
        <result column="fsize" property="fsize" />
        <result column="fdown" property="fdown" />
    </resultMap>

    <resultMap id="ppa" type="Pds">
        <result column="pno" property="pno" />
        <result column="title" property="title" />
        <result column="userid" property="userid" />
        <result column="regdate" property="regdate" />
        <result column="thumbs" property="thumbs" />
        <result column="views" property="views" />
        <result column="contents" property="contents" />
        <result column="ipaddr" property="ipaddr" />
        <collection property="pa" resultMap="pa" />
    </resultMap>

    <insert id="insertPds" parameterType="Pds">
        insert into pds (title, userid, contents, ipaddr)
        values (#{title}, #{userid}, #{contents}, #{ipaddr})
    </insert>

    <select id="lastPdsPno">
        <!-- pno를 알아내기 위해 인포메이션 스키마 사용
        select AUTO_INCREMENT - 1 pno from information_schema.TABLES where TABLE_NAME = 'pds' -->

        select last_insert_id() from pds limit 1, 1
    </select>

    <insert id="insertPdsAttach" parameterType="PdsAttach">
        insert into pdsattach (pno, fname, ftype, fsize)
        values (#{pno}, #{fname}, #{ftype}, #{fsize})
    </insert>

    <select id="selectPds" resultType="Pds">
        select pno, title, userid, regdate, thumbs, views from pds
        order by pno desc limit #{stnum}, 25
    </select>

    <select id="selectOnePds" resultMap="ppa">
        select * from ppa where pno = #{pno}
    </select>

    <select id="selectOnePdsAttach" resultType="PdsAttach">
        select * from pdsattach where pno = #{pno}
    </select>

    <select id="countAllPds">
        select ceil(count(pno) / 25) cntpg from pds
    </select>

    <update id="viewsUp">
        update pds set views=views+1 where pno=${pno}
    </update>

<!--    <delete id="deleteOnePds">-->
<!--        delete from Pds2 where bno=#{bno}-->
<!--    </delete>-->





<!--    &lt;!&ndash; 동적 쿼리로 검색 기능 구현 1 (컬럼명이나 테이블명은 #{}가 아닌 ${}사용) &ndash;&gt;-->
<!--    <select id="findPds" parameterType="map" resultType="Pds">-->
<!--        select bno, title, userid, regdate, thumbs, views from Pds2-->
<!--        <if test="findtype != 'titcont'">-->
<!--            where ${findtype} like concat('%', #{findkey}, '%')-->
<!--        </if>-->

<!--        <if test="findtype == 'titcont'">-->
<!--            where title like concat('%', #{findkey}, '%') or contents like concat('%', #{findkey}, '%')-->
<!--        </if>-->
<!--        order by bno desc limit #{stnum}, 25-->
<!--    </select>-->

<!--    &lt;!&ndash; 동적 쿼리로 검색 기능 구현 2 &ndash;&gt;-->
<!--    <select id="countFindPds" parameterType="map">-->
<!--        select ceil(count(bno) / 25) cntfpg from Pds2-->
<!--        <if test="findtype != 'titcont'">-->
<!--            where ${findtype} like concat('%', #{findkey}, '%')-->
<!--        </if>-->

<!--        <if test="findtype == 'titcont'">-->
<!--            where title like concat('%', #{findkey}, '%') or contents like concat('%', #{findkey}, '%')-->
<!--        </if>-->
<!--    </select>-->
</mapper>